{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\doc\\\\coding\\\\assignment\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { authService } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n        const response = await authService.getProfile();\n        setUser(response.data);\n      } catch (error) {\n        localStorage.removeItem(\"token\");\n        console.error(\"Failed to load user\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Register user\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await authService.register(userData);\n      localStorage.setItem(\"token\", response.data.token);\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Registration failed\");\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await authService.login(userData);\n      localStorage.setItem(\"token\", response.data.token);\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed\");\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n\n  // Update profile\n  const updateProfile = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await authService.updateProfile(userData);\n      setUser({\n        ...user,\n        ...response.data\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Update failed\");\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update password\n  const updatePassword = async passwordData => {\n    setLoading(true);\n    setError(null);\n    try {\n      await authService.updatePassword(passwordData);\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      setError(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Password update failed\");\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      updateProfile,\n      updatePassword,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","React","createContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","error","setError","loadUser","token","localStorage","getItem","response","getProfile","data","removeItem","console","register","userData","setItem","_error$response","_error$response$data","message","login","_error$response2","_error$response2$data","logout","updateProfile","_error$response3","_error$response3$data","updatePassword","passwordData","_error$response4","_error$response4$data","Provider","value","isAuthenticated","fileName","lineNumber","columnNumber","_c","useAuth","context","useContext","undefined","Error","$RefreshReg$"],"sources":["D:/doc/coding/assignment/frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport React, { createContext, useState, useEffect } from \"react\"\nimport { authService } from \"../services/api\"\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem(\"token\")\n        if (!token) {\n          setLoading(false)\n          return\n        }\n\n        const response = await authService.getProfile()\n        setUser(response.data)\n      } catch (error) {\n        localStorage.removeItem(\"token\")\n        console.error(\"Failed to load user\", error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadUser()\n  }, [])\n\n  // Register user\n  const register = async (userData) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const response = await authService.register(userData)\n      localStorage.setItem(\"token\", response.data.token)\n      setUser(response.data)\n      return response.data\n    } catch (error) {\n      setError(error.response?.data?.message || \"Registration failed\")\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Login user\n  const login = async (userData) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const response = await authService.login(userData)\n      localStorage.setItem(\"token\", response.data.token)\n      setUser(response.data)\n      return response.data\n    } catch (error) {\n      setError(error.response?.data?.message || \"Login failed\")\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    setUser(null)\n  }\n\n  // Update profile\n  const updateProfile = async (userData) => {\n    setLoading(true)\n    setError(null)\n    try {\n      const response = await authService.updateProfile(userData)\n      setUser({ ...user, ...response.data })\n      return response.data\n    } catch (error) {\n      setError(error.response?.data?.message || \"Update failed\")\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Update password\n  const updatePassword = async (passwordData) => {\n    setLoading(true)\n    setError(null)\n    try {\n      await authService.updatePassword(passwordData)\n    } catch (error) {\n      setError(error.response?.data?.message || \"Password update failed\")\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n        updateProfile,\n        updatePassword,\n        isAuthenticated: !!user,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}