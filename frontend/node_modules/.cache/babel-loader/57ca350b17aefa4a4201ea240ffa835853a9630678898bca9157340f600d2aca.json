{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\doc\\\\coding\\\\assignment\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Spinner from \"./common/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    loading,\n    isAuthenticated\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isAuthenticated) {\n    // Redirect to login page but save the location they were trying to access\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"v5bQYRdKrtBHSHDN7mzzx2QoBYo=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","Navigate","useLocation","useAuth","Spinner","jsxDEV","_jsxDEV","ProtectedRoute","children","loading","isAuthenticated","location","fileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["D:/doc/coding/assignment/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["\"use client\"\nimport { Navigate, useLocation } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport Spinner from \"./common/Spinner\"\n\nconst ProtectedRoute = ({ children }) => {\n  const { loading, isAuthenticated } = useAuth()\n  const location = useLocation()\n\n  if (loading) {\n    return <Spinner />\n  }\n\n  if (!isAuthenticated) {\n    // Redirect to login page but save the location they were trying to access\n    return <Navigate to=\"/login\" state={{ from: location }} replace />\n  }\n\n  return children\n}\n\nexport default ProtectedRoute\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AACZ,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,OAAO,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAT,EAAA;EACvC,MAAM;IAAEU,OAAO;IAAEC;EAAgB,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC9C,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,IAAIO,OAAO,EAAE;IACX,oBAAOH,OAAA,CAACF,OAAO;MAAAQ,QAAA,EAAAd,YAAA;MAAAe,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EAEA,IAAI,CAACJ,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA,CAACL,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEN;MAAS,CAAE;MAACO,OAAO;IAAA;MAAAN,QAAA,EAAAd,YAAA;MAAAe,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,OAAON,QAAQ;AACjB,CAAC;AAAAT,EAAA,CAdKQ,cAAc;EAAA,QACmBJ,OAAO,EAC3BD,WAAW;AAAA;AAAAiB,EAAA,GAFxBZ,cAAc;AAgBpB,eAAeA,cAAc;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}