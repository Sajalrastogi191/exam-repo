{"ast":null,"code":"var _jsxFileName = \"D:\\\\doc\\\\coding\\\\good project\\\\mern project exam\\\\frontend\\\\src\\\\pages\\\\MyPapersPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { paperService } from \"../services/api\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../components/common/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPapersPage = () => {\n  _s();\n  const [papers, setPapers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchMyPapers = async () => {\n      try {\n        setLoading(true);\n        const response = await paperService.getUserPapers();\n        setPapers(response.data);\n      } catch (err) {\n        setError(\"Failed to fetch your papers.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMyPapers();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-600 text-center py-8\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"My Uploaded Papers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), papers.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-600\",\n      children: \"You have not uploaded any papers yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"divide-y divide-gray-200\",\n      children: papers.map(paper => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"py-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/papers/${paper._id}`,\n          className: \"text-blue-600 hover:underline font-medium\",\n          children: paper.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: [paper.subject, \" \\u2022 \", paper.semester, \" \\u2022 \", paper.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, paper._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPapersPage, \"e5CJQQHaO3BSgixGFm8RfZqC7v8=\");\n_c = MyPapersPage;\nexport default MyPapersPage;\nvar _c;\n$RefreshReg$(_c, \"MyPapersPage\");","map":{"version":3,"names":["useEffect","useState","paperService","Link","Spinner","jsxDEV","_jsxDEV","MyPapersPage","_s","papers","setPapers","loading","setLoading","error","setError","fetchMyPapers","response","getUserPapers","data","err","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","paper","to","_id","title","subject","semester","year","_c","$RefreshReg$"],"sources":["D:/doc/coding/good project/mern project exam/frontend/src/pages/MyPapersPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { paperService } from \"../services/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../components/common/Spinner\";\r\n\r\nconst MyPapersPage = () => {\r\n  const [papers, setPapers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchMyPapers = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await paperService.getUserPapers();\r\n        setPapers(response.data);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch your papers.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchMyPapers();\r\n  }, []);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <div className=\"text-red-600 text-center py-8\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">My Uploaded Papers</h2>\r\n      {papers.length === 0 ? (\r\n        <div className=\"text-gray-600\">You have not uploaded any papers yet.</div>\r\n      ) : (\r\n        <ul className=\"divide-y divide-gray-200\">\r\n          {papers.map((paper) => (\r\n            <li key={paper._id} className=\"py-4\">\r\n              <Link to={`/papers/${paper._id}`} className=\"text-blue-600 hover:underline font-medium\">\r\n                {paper.title}\r\n              </Link>\r\n              <div className=\"text-sm text-gray-500\">\r\n                {paper.subject} • {paper.semester} • {paper.year}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPapersPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}